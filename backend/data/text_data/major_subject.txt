===CATEGORY: 전공과목
===TITLE: 컴퓨터과학
과목코드: CS0614
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 1-2학년
개설 학기: 1학기

과목 소개:
이 과목은 생성형 인공지능을 포함한 현대 컴퓨터공학의 기본 개념과 구조를 이해하는 입문 과목입니다. 컴퓨터의 역사와 발전 과정을 살펴보며, 컴퓨터 하드웨어의 주요 구성 요소인 CPU, 메모리, 보조기억장치, 입출력 장치 등의 구조와 기능을 학습합니다. 운영체제의 역할과 작동 원리를 이해하고, 프로그래밍 언어의 개념과 종류를 익혀 소프트웨어의 기초를 다집니다. 컴퓨터 통신과 인터넷 활용 단원에서는 네트워크의 기본 원리와 데이터 전송 과정을 학습하며, 정보통신 기술이 컴퓨터 시스템과 어떻게 결합되는지를 이해합니다. 인공지능, 사물인터넷, 가상현실, 증강현실 등 생성형 AI 기술의 개념과 응용 분야를 학습하여 첨단 기술의 흐름을 파악합니다. 컴퓨터 시스템 보호를 위한 보안 개념과 방법을 익혀 정보 보호의 중요성을 이해하고, 전체 컴퓨터 시스템이 하드웨어와 소프트웨어, 네트워크, AI 기술로 통합되어 작동하는 원리를 종합적으로 학습합니다.

학습 내용:
컴퓨터과학은 일상생활 속 미래기술과 컴퓨터의 역할을 이해하는 것에서 출발하여, 컴퓨터의 정의와 발전 과정, 그리고 정보 처리 과정을 학습합니다. 디지털 정보의 표현 방식을 통해 데이터의 디지털화, 비트와 바이트 개념, 진법 변환, 문자와 이미지, 음성의 표현 원리를 익힙니다. 컴퓨터의 구조를 구성하는 하드웨어 요소와 중앙처리장치, 메모리, 입출력 장치의 역할을 이해합니다. 멀티미디어와 확장현실에서는 영상과 음성 처리 기술, 가상현실과 증강현실의 개념과 응용을 다룹니다. 인공지능과 빅데이터 단원에서는 머신러닝의 기본 개념과 데이터 분석 및 활용 방법, 그리고 인공지능 기술이 사회에 미치는 영향을 탐구합니다. 컴퓨터 사고와 알고리즘 부분에서는 문제 해결 절차를 기반으로 한 순차, 반복, 분기 구조의 알고리즘 설계와 표현 방법을 학습합니다. 프로그래밍 언어 단원에서는 절차적 언어와 객체지향 언어의 개념을 이해하고 기본적인 코드 작성 방법을 익힙니다. 운영체제에서는 시스템 자원 관리, 프로세스와 메모리 관리, 파일 시스템의 원리를 배우며, 데이터베이스 단원에서는 데이터 저장과 관리의 개념, 관계형 데이터베이스 구조, 그리고 SQL 기초를 다룹니다. 컴퓨터 네트워크에서는 네트워크의 기본 구조와 인터넷의 동작 원리, 통신 프로토콜, IP와 DNS 개념을 이해하며, 무선통신과 모바일에서는 모바일 네트워크 구조, 무선 통신 기술, 사물인터넷의 개념을 학습합니다. 정보보안 및 최신 정보통신 기술에서는 보안의 기본 원리와 암호화 방식, 사이버 위협 대응 방법, 그리고 최신 ICT 기술의 동향을 살펴봅니다.

기술 키워드: CPU, 메모리, 하드웨어, 운영체제, OS, 프로그래밍언어, 알고리즘, 데이터베이스, SQL, 네트워크, 인터넷, 프로토콜, IP, DNS, AI, 인공지능, 머신러닝, 빅데이터, VR, AR, 가상현실, 증강현실, IoT, 사물인터넷, 정보보안, 암호화, 생성형AI, 디지털정보, 진법변환

관심사 키워드: 컴퓨터공학입문, CS기초, 전공기초, 컴퓨터구조, 소프트웨어기초, 하드웨어기초, 인공지능기초, 미래기술, 정보통신, 1학년필수, 전공시작, IT기초지식, 컴퓨터전반, 기초필수


===CATEGORY: 전공과목
===TITLE: 자료구조
과목코드: CS0603
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 2학년
개설 학기: 1학기

과목 소개:
자료구조는 컴퓨터 전공자들이 컴퓨터 내부의 자료 표현 방법, 자료를 효율적으로 구성하는 방법, 알고리즘을 이해하고 응용한 방법을 학습하여 자료구조를 활용한 문제 해결 능력을 기르는 전공 핵심 과목입니다. C 언어를 활용하여 배열, 포인터, 구조체, 재귀호출 등의 프로그래밍 기법을 익히고, 리스트, 스택, 큐, 트리, 그래프 등 다양한 자료구조의 구현과 활용 방법을 실습합니다. 정렬과 검색 알고리즘의 원리와 성능을 비교 분석하며, 이를 통해 실제 문제 해결 능력을 기릅니다. 코딩 테스트와 기술 면접, 실무 개발에 필수적인 과목입니다.

학습 내용:
자료구조 과목에서는 자료의 표현과 추상화, 알고리즘의 표현 방법 및 성능 분석을 통해 자료구조의 기본 개념을 이해합니다. C 프로그래밍 기법을 활용하여 배열, 포인터, 구조체, 재귀호출 등의 구현 방법을 학습하며, 이를 바탕으로 순차형 자료구조와 선형 리스트의 연산과 알고리즘, 그리고 그 응용 및 구현 방법을 익힙니다. 연결 구조에서는 단순 연결 리스트, 원형 연결 리스트, 이중 연결 리스트의 구조와 차이점을 이해하고, 연결 리스트의 응용과 구현을 실습합니다. 스택 단원에서는 스택의 개념과 구현 방법, 다양한 응용 사례를 학습하며, 큐 단원에서는 큐의 구현, 데크의 개념, 그리고 큐의 응용 방법을 다룹니다. 트리 단원에서는 이진 트리와 이진 탐색 트리, 균형 이진 트리, 히프의 개념과 연산을 학습하고, 그래프 단원에서는 그래프의 표현과 구현, 순회 알고리즘, 신장 트리와 최소 비용 신장 트리의 개념을 이해합니다. 정렬 알고리즘에서는 선택 정렬, 버블 정렬, 퀵 정렬, 삽입 정렬, 셀 정렬, 병합 정렬, 기수 정렬, 히프 정렬, 트리 정렬 등 다양한 정렬 방법의 원리와 성능을 비교하며, 검색 알고리즘에서는 순차 검색, 이진 검색, 이진 트리 검색, 해싱을 통해 효율적인 데이터 탐색 방법을 학습합니다.

기술 키워드: C언어, 배열, 포인터, 구조체, 재귀, 리스트, 연결리스트, 스택, 큐, 데크, 트리, 이진트리, 이진탐색트리, 균형이진트리, 히프, 그래프, 신장트리, 정렬알고리즘, 검색알고리즘, 해싱, 시간복잡도, 공간복잡도, DFS, BFS, 퀵정렬, 병합정렬

관심사 키워드: 알고리즘, 자료구조, 코딩테스트, 문제해결, 프로그래밍기초, 컴퓨터공학핵심, 코딩인터뷰, 개발기초, 알고리즘설계, 효율적프로그래밍, 2학년필수, 전공핵심, 취업준비


===CATEGORY: 전공과목
===TITLE: 모바일프로그래밍
과목코드: CS0856
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 2학년
개설 학기: 1학기

과목 소개:
유니티는 심플하고 강력한 기능으로 게임 개발 뿐만 아니라 건축, 인테리어, 자동차 산업, 영상 제작 등 다양한 분야에 활용되는 매우 유용한 도구입니다. 본 강좌는 유니티 엔진의 설치, 개발 환경의 이해 그리고 인터페이스를 학습하여 유니티 엔진을 이용한 2D, 3D, 스마트폰용 게임을 학습하여 게임 개발자 영역에 대한 도전의 출발점을 목표로 합니다. 학생들은 유니티 개발 환경을 구축하고 C# 프로그래밍 기초를 배우며, 다양한 장르의 게임을 프로젝트로 완성하면서 실전 게임 개발 능력을 습득합니다. 포트폴리오로 활용할 수 있는 완성된 게임을 제작할 수 있습니다.

학습 내용:
모바일프로그래밍 과목에서는 유니티 개발 환경을 구축하고 엔진 설치, 프로젝트 생성, 인터페이스 구조와 씬 편집, 게임 오브젝트 관리 및 버튼 기능 등 기본적인 개발 절차를 학습합니다. 이후 유니티 엔진의 동작 원리를 이해하며 상속과 재사용, 컴포넌트 패턴, 에디터의 구조, 메시지와 브로드캐스팅 시스템을 익힙니다. C# 프로그래밍 기초 단원에서는 변수, 함수, 스크립트 작성, 코딩 규칙, 제어문, 배열, 메서드 활용 등을 통해 스크립트 기반 개발 능력을 키웁니다. 게임 오브젝트 제어에서는 클래스와 객체의 개념을 바탕으로 C# 클래스를 생성하고, 참조 타입과 변수를 활용해 컴포넌트를 제어하는 방법을 실습합니다. 실습 단계에서는 닷지 게임을 제작하며 씬 구성, 카메라 설정, 플레이어 제작, 사용자 입력 처리, 탄알 생성과 충돌 처리, 게임 매니저 및 UI 구성, 빌드 과정을 수행합니다. 벡터와 공간 개념 단원에서는 벡터 수학, 유니티의 벡터와 쿼터니언, 오브젝트 이동과 회전, 벡터 연산을 학습하여 3D 공간 이해를 높입니다. 이어서 2D 러너 게임 제작을 통해 플레이어와 배경 스크롤 구현, UI 구성, 발판 반복 생성 및 게임 완성 과정을 다루며, 최종적으로 탑다운 슈터 게임을 개발하면서 레벨 아트, 라이팅, 캐릭터 애니메이션, 이동 구현, 총기 시스템과 슈터 제작, 생명 시스템, 좀비 AI, 다형성과 클래스 설계까지 실습을 통해 완성도 높은 게임 개발 능력을 습득합니다.

기술 키워드: Unity, 유니티, C#, 게임개발, 2D게임, 3D게임, 모바일게임, 게임엔진, 컴포넌트, 벡터, 쿼터니언, 애니메이션, AI, 게임오브젝트, 스크립트, 라이팅, UI, 충돌처리, 게임물리, 씬, 프리팹, 게임디자인

관심사 키워드: 게임개발, 게임프로그래밍, 모바일앱, 게임디자인, 실습프로젝트, 포트폴리오, 게임제작, 창작, 엔터테인먼트, 인디게임, 게임기획, 프로젝트형수업, 실전개발


===CATEGORY: 전공과목
===TITLE: OSS개론
과목코드: CS0862
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 1-2학년
개설 학기: 1학기

과목 소개:
OSS개론은 오픈소스의 개념과 종류, 필요성에 대하여 이해하는 과목입니다. 소프트웨어 개발을 위한 협업 관리 필수 도구인 깃을 학습하고 깃허브를 이용하여 협업하여 프로젝트를 수행합니다. 학생들은 버전 관리의 중요성을 이해하고 실제 개발 환경에서 사용되는 Git과 GitHub의 활용 방법을 익히며, 오픈소스 프로젝트에 기여하는 실무 경험을 쌓습니다. 팀 단위 개발 워크플로우를 체험하고 협업 능력을 강화합니다.

학습 내용:
OSS개론 과목에서는 오픈소스 소프트웨어의 개념과 역사, 버전과 버전 관리의 중요성을 이해하고 이를 실제 개발 환경에 적용하는 방법을 학습합니다. 소스트리와 같은 GUI 도구를 활용하여 버전 관리의 기본 원리를 익히고, 깃허브를 이용한 원격 저장소 관리와 협업 방식을 실습합니다. 또한 리눅스의 기초 명령어를 학습하여 파일 시스템 탐색, 권한 관리, 기본적인 쉘 명령 수행 능력을 기릅니다. 명령어 기반으로 Git을 다루는 방법을 통해 저장소 초기화, 커밋, 브랜치 생성 및 병합, 충돌 해결 등의 실무 명령을 익히며, 깃허브를 활용한 협업을 통해 팀 단위 개발 워크플로우를 체험합니다. 이후 오픈소스 프로젝트를 직접 활용하고 수정하며, 오픈소스 기여 과정과 이슈 관리, 코드 수정 및 병합 절차를 실습함으로써 실무 중심의 오픈소스 개발 역량을 강화합니다.

기술 키워드: Git, GitHub, 오픈소스, 버전관리, 소스트리, 리눅스, 쉘명령어, 브랜치, 병합, 커밋, 원격저장소, Pull Request, 이슈관리, 협업도구

관심사 키워드: 오픈소스, 협업개발, 버전관리, 팀프로젝트, 개발도구, 실무개발, 소프트웨어협업, 코드관리, 개발프로세스


===CATEGORY: 전공과목
===TITLE: 이산수학
과목코드: CS0623
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 2학년
개설 학기: 2학기

과목 소개:
이산수학 과목은 컴퓨터 관련 학문을 배우는 학생들이 수학적 사고의 기초를 다지고, 이를 통해 컴퓨터와 수학 분야의 이론을 더 쉽고 정확하게 이해하도록 돕습니다. 학생들은 수학적 논리의 개념을 학습하고, 귀납적·연역적 증명 과정을 통해 논리를 알고리즘 분석과 개발로 확장하는 방법을 익힙니다. 데이터를 표현하는 방식과 데이터 간의 관계를 구체적으로 나타내는 방법을 배우며, 이를 프로그래밍을 통해 응용하는 능력을 기릅니다. 컴퓨터에서 데이터를 관리하고 처리하는 과정과, 데이터 간의 관계를 표현하고 조작하는 방법을 이해합니다. 불 대수를 기반으로 논리회로의 동작 원리와 언어의 체계적 규칙을 정의하는 형식언어 및 유한 상태기계의 개념을 학습하여, 논리적 사고를 실제 시스템 설계와 연결할 수 있는 능력을 배웁니다.

학습 내용:
이산수학 과목에서는 컴퓨터와 수학의 기초 개념을 다루며, 논리적 사고와 알고리즘적 사고를 함께 기르는 것을 목표로 합니다. 수업은 컴퓨터 수학의 기본 개념을 소개하는 것으로 시작하여, 숫자의 표현과 연산 방법을 학습하고, 명제와 논리의 원리를 이해합니다. 이후 증명의 개념과 방법을 익히며, 집합과 순서, 관계의 개념을 통해 수학적 구조를 이해합니다. 함수의 정의와 응용을 배우고, 그래프와 트리의 구조 및 특성을 학습하여 데이터 간의 관계를 시각적으로 표현하는 방법을 익힙니다. 불 대수를 학습하여 논리 회로와 연산의 기초를 이해하고, 순열과 조합, 확률 개념을 통해 경우의 수와 확률 계산 능력을 기릅니다. 마지막으로 알고리즘 단원에서는 문제 해결을 위한 절차적 접근과 효율적인 알고리즘 설계의 기초를 학습합니다.

기술 키워드: 명제, 논리, 집합, 관계, 함수, 그래프, 트리, 불대수, 순열, 조합, 확률, 알고리즘, 증명, 귀납법, 연역법, 논리회로, 형식언어, 유한상태기계

관심사 키워드: 수학기초, 논리적사고, 알고리즘기초, 컴퓨터수학, 이론기초, 증명방법, 문제해결, 2학년필수


===CATEGORY: 전공과목
===TITLE: 어드벤처디자인
과목코드: CS0860
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 1-2학년
개설 학기: 2학기

과목 소개:
이 강의는 학생들이 인터랙티브 스토리텔링, 게임 디자인, 가상 세계 구축의 기초를 익히는 동시에 창의적이고 실무적인 능력을 배양하는 것을 목표로 합니다. 특히 학생들은 아이디어를 개발하고, 이를 지역사회 및 지역산업에서 활용할 수 있는 실질적인 결과물로 구체화하는 과정을 경험하게 됩니다. 강의는 게임 디자인뿐만 아니라 스마트농업과 같은 융합기술 분야와 관련된 지식을 활용하여 다양한 문제를 해결하는 데 초점을 맞춥니다. 학생들은 문제 해결형 교육을 통해 창의적인 사고를 기획, 설계, 제작, 시현하는 과정을 통해 전공 분야에 대한 학습 동기를 부여받고, 창의적 능력을 강화합니다.

학습 내용:
어드벤처디자인 과목은 창의적인 사고와 문제 해결 능력을 함양하기 위해 기획, 설계, 제작의 전 과정을 경험하는 프로젝트형 수업입니다. 수업은 어드벤처디자인의 개요와 창의성의 개념을 이해하는 것으로 시작하며, 브레인스토밍을 통해 아이디어를 자유롭게 발산하고 이를 구체화하는 방법을 학습합니다. 팀워크와 팀 운영 방안을 익혀 협업 역량을 강화하고, 융복합 기술(IoT, 빅데이터, 인공지능, 클라우드 등)을 이해하여 다양한 기술을 아이디어 설계에 적용하는 방법을 탐구합니다. 이후 어드벤처 아이디어 설계 방법을 배우고, 설계 과정에서 발생하는 문제점을 분석하고 개선 방안을 제시하며 아이디어를 발전시킵니다. 지역 및 산업 전문가의 특강을 통해 현장의 실무적 관점과 창의적 문제 해결 사례를 배우고, 학생들은 이를 바탕으로 자신들의 어드벤처 아이디어 제작 과정을 설계하고 발표합니다. 마지막으로 팀별 프로젝트 결과를 공유하며, 실제 산업 현장과 연계된 발표를 통해 창의적 아이디어의 실질적 구현 능력을 평가받습니다.

기술 키워드: 게임디자인, 인터랙티브스토리텔링, IoT, 빅데이터, 인공지능, 클라우드, 브레인스토밍, 프로젝트설계, 융복합기술, 스마트농업

관심사 키워드: 창의성, 아이디어발상, 팀프로젝트, 문제해결, 협업, 디자인씽킹, 프로젝트형수업, 실무연계, 창작, 지역산업연계


===CATEGORY: 전공과목
===TITLE: 고급컴퓨터프로그래밍
과목코드: CS0855
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 1-2학년
개설 학기: 2학기

과목 소개:
이 과목은 컴퓨터공학 전공자를 위한 선택 과목으로, C언어를 통해 프로그래밍의 기초 개념부터 하드웨어에 가까운 저수준 프로그래밍까지 폭넓게 학습하는 것을 목표로 합니다. 학생들은 컴퓨터의 내부 동작 원리와 프로그래밍의 핵심 개념을 정확히 이해하고, 이를 실제 개발 환경에 적용할 수 있는 능력을 기릅니다. 또한 고급 컴퓨터 프로그래밍에 적합한 수업 설계 자료를 직접 작성하고, 마이크로티칭을 통해 교수 시연을 수행하며 교육적 역량을 향상시킵니다. C언어 학습을 바탕으로 파이썬, 자바 등 다른 프로그래밍 언어를 배우는 데 필요한 기초를 다지고, 개발자로서의 자신감을 키웁니다. 종합 프로젝트를 수행하며 실제 개발 환경을 경험하고, 실무 중심의 문제 해결 능력을 강화합니다.

학습 내용:
이 과목에서는 C언어를 중심으로 프로그래밍의 기초부터 고급 개념까지 단계적으로 학습합니다. 먼저 프로그램의 기본 개념과 C언어의 특징을 이해하고, C 프로그램의 구성 요소와 실행 과정을 익힙니다. 변수와 자료형을 통해 데이터를 저장하고 다루는 방법을 배우며, 다양한 연산자를 활용하여 프로그램의 논리적 흐름을 구성합니다. 조건문과 반복문을 학습하여 프로그램의 제어 구조를 설계하고, 함수를 이용해 코드의 재사용성과 구조화를 실습합니다. 이후 함수의 변수 영역과 스코프 개념을 익히고, 포인터의 기초와 활용 방법을 통해 메모리 제어와 효율적인 데이터 접근 방식을 이해합니다. 구조체를 이용하여 복합 데이터를 다루는 방법을 배우며, 파일 입출력을 통해 외부 데이터의 저장과 처리를 실습합니다. 마지막으로 전처리기의 개념을 학습하여 프로그램의 효율성을 높이고, 실제 개발 환경에서 활용 가능한 C언어 프로그래밍 능력을 완성합니다.

기술 키워드: C언어, 포인터, 구조체, 함수, 배열, 파일입출력, 메모리관리, 전처리기, 저수준프로그래밍, 변수, 자료형, 연산자, 조건문, 반복문

관심사 키워드: 프로그래밍기초, C언어기초, 저수준프로그래밍, 메모리제어, 시스템프로그래밍, 프로그래밍언어학습, 개발기초


===CATEGORY: 전공과목
===TITLE: 리눅스시스템
과목코드: CS0857
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 2-3학년
개설 학기: 1학기

과목 소개:
4차 산업혁명 시대를 이끌 주요 기술 중 인프라는 5G 통신과 초연결입니다. 초연결은 모든 사물이 인터넷에 유무선으로 연결되는 것으로, 이 연결대상은 클라이언트거나 서버입니다. 전 세계에서 규모가 있는 기업기관들은 대부분 서버를 유닉스로 구성하고, 학습에 사용되는 서버는 리눅스로 구성합니다. 리눅스는 유닉스와 매우 유사하고 무료이기 때문입니다. 이 강의는 리눅스를 배우는 것을 목표로 하며, 리눅스를 설치하고 운영할 수 있고, 웹 서버와 FTP, Telnet 서버를 구축하고 운영하는 능력을 기릅니다. 리눅스 관리 실습을 통해 실무 서버 운영 능력을 습득하고, VMware를 이용하여 가상머신 환경에서 실습하며 서버 구축 경험을 쌓습니다.

학습 내용:
이 과목은 리눅스 운영체제의 기초부터 서버 구축, 시스템 관리까지 단계적으로 학습하여 실무 서버 운영 능력을 기르는 것을 목표로 합니다. 수업은 리눅스의 개요와 역사, 주요 배포판의 특징을 이해하는 것으로 시작하여, VMware를 이용한 가상머신 설치와 리눅스 설치 과정을 실습합니다. 이후 리눅스 기본 명령어를 학습하여 파일 및 디렉터리 관리, 사용자 및 그룹 관리, 파일 권한 설정 등의 시스템 관리 기초를 익힙니다. 쉘 스크립트를 작성하여 반복 작업을 자동화하고, 프로세스와 서비스 관리를 통해 시스템 자원을 효율적으로 제어하는 방법을 배웁니다. 네트워크 설정과 관리 단원에서는 IP 주소 설정, 방화벽 구성, 네트워크 진단 도구 활용법을 실습하며, 웹 서버(Apache) 구축과 운영을 통해 실제 웹 서비스 환경을 구성합니다. FTP와 Telnet 서버를 설치하고 설정하여 원격 파일 전송과 원격 접속 환경을 구축하며, 시스템 백업과 보안 설정을 통해 안정적인 서버 운영 방법을 학습합니다. 마지막으로 로그 분석과 시스템 모니터링을 실습하여 서버 상태를 관리하고 문제를 진단하는 실무 역량을 강화합니다.

기술 키워드: Linux, 리눅스, 유닉스, VMware, 가상머신, 쉘명령어, 쉘스크립트, Apache, 웹서버, FTP, Telnet, 서버구축, 시스템관리, 프로세스관리, 네트워크설정, 방화벽, 권한관리, 백업

관심사 키워드: 리눅스, 서버관리, 시스템관리, 서버구축, 네트워크관리, 운영체제, 실무서버, 클라우드기초, 인프라


===CATEGORY: 전공과목
===TITLE: 프로그래밍기초
과목코드: CS0659
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 1학년
개설 학기: 2학기

과목 소개:
프로그래밍기초는 컴퓨터 프로그래밍의 입문 과목으로, 파이썬 언어를 활용하여 프로그래밍의 기본 개념과 논리적 사고력을 기르는 것을 목표로 합니다. 학생들은 변수, 자료형, 제어문, 함수 등 프로그래밍의 핵심 요소를 학습하고, 간단한 프로그램을 직접 작성하며 문제 해결 능력을 향상시킵니다. 파이썬은 문법이 간결하고 배우기 쉬워 프로그래밍 입문자에게 적합하며, 데이터 분석, 웹 개발, 인공지능 등 다양한 분야에서 활용되는 언어입니다. 이 과목을 통해 학생들은 프로그래밍의 기초를 탄탄히 다지고, 이후 심화 프로그래밍 과목을 수강하기 위한 기반을 마련합니다.

학습 내용:
이 과목은 파이썬을 활용한 프로그래밍의 기초 개념을 단계적으로 학습합니다. 수업은 프로그래밍의 개념과 파이썬의 특징, 개발 환경 설정으로 시작하여, 변수와 자료형(정수, 실수, 문자열, 불린)의 개념을 이해하고 데이터를 다루는 방법을 배웁니다. 이후 연산자를 활용한 계산과 논리 연산을 학습하고, 조건문(if, elif, else)을 통해 프로그램의 흐름을 제어하는 방법을 익힙니다. 반복문(for, while)을 학습하여 반복 작업을 효율적으로 처리하고, 리스트, 튜플, 딕셔너리 등의 자료구조를 활용하여 복잡한 데이터를 관리하는 방법을 배웁니다. 함수의 개념과 정의, 매개변수와 반환값을 이해하며 코드의 재사용성을 높이는 방법을 실습합니다. 파일 입출력을 통해 외부 데이터를 읽고 쓰는 방법을 배우고, 예외 처리를 학습하여 프로그램의 안정성을 높입니다. 마지막으로 간단한 프로젝트를 수행하며 배운 내용을 종합적으로 활용하여 실제 문제를 해결하는 능력을 기릅니다.

기술 키워드: Python, 파이썬, 변수, 자료형, 연산자, 조건문, 반복문, 리스트, 튜플, 딕셔너리, 함수, 파일입출력, 예외처리

관심사 키워드: 프로그래밍입문, 코딩기초, 파이썬기초, 1학년필수, 논리적사고, 문제해결, 프로그래밍언어입문


===CATEGORY: 전공과목
===TITLE: 데이터베이스
과목코드: CS0608
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 3학년
개설 학기: 1학기

과목 소개:
데이터베이스는 현대 정보 시스템의 핵심 기술로, 효율적인 데이터 저장, 관리, 검색 방법을 학습하는 전공 필수 과목입니다. 학생들은 데이터베이스의 기본 개념과 구조를 이해하고, 관계형 데이터베이스 설계 원리를 배우며, SQL을 활용한 데이터 조작 및 관리 능력을 습득합니다. 실무에서 널리 사용되는 데이터베이스 시스템을 직접 구축하고 운영하는 경험을 통해 데이터 중심 애플리케이션 개발 역량을 강화합니다. 이 과목은 웹 개발, 앱 개발, 빅데이터 등 다양한 분야의 기초가 되는 필수 과목입니다.

학습 내용:
이 과목은 데이터베이스의 기본 개념부터 설계, 구현, 관리까지 체계적으로 학습합니다. 수업은 데이터베이스의 정의와 필요성, 데이터베이스 관리 시스템의 역할을 이해하는 것으로 시작하여, 데이터 모델링의 개념과 E-R 다이어그램 작성 방법을 학습합니다. 관계형 데이터베이스의 구조와 특징을 이해하고, 정규화 과정을 통해 효율적인 데이터베이스 설계 방법을 배웁니다. SQL 기초 단원에서는 데이터 정의어(DDL), 데이터 조작어(DML), 데이터 제어어(DCL)를 학습하여 테이블 생성, 데이터 삽입, 수정, 삭제, 조회 등의 기본 연산을 익힙니다. 고급 SQL에서는 조인, 서브쿼리, 집계 함수, 그룹화 등의 복잡한 쿼리 작성 방법을 실습하고, 인덱스와 뷰를 활용한 성능 최적화 기법을 배웁니다. 트랜잭션과 동시성 제어 단원에서는 데이터 무결성을 보장하는 방법과 여러 사용자가 동시에 데이터베이스에 접근할 때의 문제 해결 방법을 학습합니다. 마지막으로 데이터베이스 보안과 백업, 복구 전략을 다루며 안정적인 데이터베이스 운영 방법을 익힙니다.

기술 키워드: 데이터베이스, DB, SQL, DDL, DML, DCL, 관계형데이터베이스, RDBMS, E-R다이어그램, 데이터모델링, 정규화, 조인, 서브쿼리, 인덱스, 뷰, 트랜잭션, 동시성제어, 데이터무결성

관심사 키워드: 데이터베이스, 데이터관리, SQL, 데이터설계, 백엔드, 웹개발기초, 3학년필수, 데이터베이스설계, 실무필수


===CATEGORY: 전공과목
===TITLE: 컴퓨터네트워크
과목코드: CS0612
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 3학년
개설 학기: 1학기

과목 소개:
컴퓨터네트워크는 현대 정보 통신의 핵심 기술로, 컴퓨터 간의 데이터 통신 원리와 네트워크 구조를 학습하는 전공 필수 과목입니다. 학생들은 OSI 7계층 모델과 TCP/IP 프로토콜의 구조를 이해하고, 인터넷의 작동 원리와 다양한 네트워크 장비의 역할을 배웁니다. 네트워크 설계, 구축, 관리에 필요한 실무 지식을 습득하며, 실습을 통해 실제 네트워크 환경을 구성하고 문제를 해결하는 능력을 기릅니다. 이 과목은 웹 개발, 클라우드 컴퓨팅, 사이버 보안 등 다양한 IT 분야의 기초가 되는 필수 과목입니다.

학습 내용:
이 과목은 컴퓨터 네트워크의 기본 개념부터 프로토콜, 네트워크 설계까지 체계적으로 학습합니다. 수업은 네트워크의 정의와 필요성, 네트워크의 종류(LAN, WAN, MAN)를 이해하는 것으로 시작하여, OSI 7계층 모델과 TCP/IP 4계층 모델의 구조와 각 계층의 역할을 학습합니다. 물리 계층에서는 전송 매체와 신호 변환 방법을 배우고, 데이터 링크 계층에서는 프레임 구성, 오류 검출 및 수정, MAC 주소의 개념을 익힙니다. 네트워크 계층에서는 IP 주소 체계와 서브넷팅, 라우팅 알고리즘을 학습하며, 전송 계층에서는 TCP와 UDP 프로토콜의 차이와 포트 번호, 흐름 제어, 혼잡 제어 메커니즘을 이해합니다. 응용 계층에서는 HTTP, FTP, DNS, SMTP 등 주요 응용 프로토콜의 동작 원리를 배우고, 네트워크 보안 단원에서는 암호화, 방화벽, VPN 등의 보안 기술을 학습합니다. 무선 네트워크와 모바일 통신의 원리를 다루며, 실습을 통해 네트워크를 직접 구성하고 패킷 분석 도구를 활용하여 네트워크 트래픽을 분석하는 능력을 기릅니다.

기술 키워드: 네트워크, Network, OSI7계층, TCP/IP, IP주소, 서브넷팅, 라우팅, TCP, UDP, HTTP, DNS, FTP, SMTP, 프로토콜, MAC주소, 포트, 패킷, 방화벽, VPN, LAN, WAN

관심사 키워드: 컴퓨터네트워크, 네트워크기초, 통신프로토콜, 인터넷, 네트워크설계, 3학년필수, 네트워크관리, 백엔드기초


===CATEGORY: 전공과목
===TITLE: 알고리즘
과목코드: CS0807
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 3학년
개설 학기: 2학기

과목 소개:
알고리즘은 문제 해결을 위한 효율적인 절차와 방법을 학습하는 전공 핵심 과목입니다. 학생들은 다양한 알고리즘 설계 기법(분할정복, 탐욕법, 동적계획법, 백트래킹 등)을 이해하고, 각 기법의 특징과 적용 사례를 학습합니다. 알고리즘의 시간 복잡도와 공간 복잡도를 분석하여 최적의 해결 방법을 선택하는 능력을 기르며, 실제 코딩 테스트와 기술 면접에서 자주 출제되는 문제들을 실습을 통해 해결합니다. 이 과목은 소프트웨어 개발의 핵심 역량을 강화하고, 효율적인 프로그램 설계 능력을 배양하는 필수 과목입니다.

학습 내용:
이 과목은 알고리즘의 기본 개념부터 고급 설계 기법까지 체계적으로 학습합니다. 수업은 알고리즘의 정의와 중요성, 알고리즘 분석 방법(시간 복잡도, 공간 복잡도, Big-O 표기법)을 이해하는 것으로 시작합니다. 정렬 알고리즘(버블, 선택, 삽입, 퀵, 병합, 힙 정렬 등)과 검색 알고리즘(순차, 이진 검색 등)을 학습하며 각 알고리즘의 성능을 비교 분석합니다. 분할정복 기법을 통해 큰 문제를 작은 문제로 나누어 해결하는 방법을 배우고, 동적계획법으로 중복 계산을 피하며 최적해를 구하는 방법을 익힙니다. 탐욕 알고리즘을 학습하여 매 단계에서 최선의 선택을 하는 방법을 이해하고, 백트래킹 기법으로 모든 가능한 경우를 탐색하는 방법을 배웁니다. 그래프 알고리즘에서는 깊이 우선 탐색(DFS), 너비 우선 탐색(BFS), 최단 경로 알고리즘(다익스트라, 벨만-포드, 플로이드-워셜), 최소 신장 트리(크루스칼, 프림) 등을 학습합니다. 문자열 처리 알고리즘과 계산 복잡도 이론(P, NP 문제)을 다루며, 실습을 통해 다양한 문제를 효율적으로 해결하는 알고리즘 설계 능력을 완성합니다.

기술 키워드: 알고리즘, 시간복잡도, 공간복잡도, Big-O, 정렬, 검색, 분할정복, 동적계획법, 탐욕알고리즘, 백트래킹, DFS, BFS, 다익스트라, 최단경로, 최소신장트리, 그래프알고리즘, DP

관심사 키워드: 알고리즘, 문제해결, 코딩테스트, 알고리즘설계, 효율적프로그래밍, 3학년필수, 전공핵심, 취업준비, 코딩인터뷰


===CATEGORY: 전공과목
===TITLE: 컴퓨터구조
과목코드: CS0619
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 2학년
개설 학기: 1학기

과목 소개:
컴퓨터구조는 컴퓨터 하드웨어의 구성과 동작 원리를 학습하는 전공 필수 과목입니다. 학생들은 CPU, 메모리, 입출력 장치 등 컴퓨터의 핵심 구성 요소와 이들의 상호작용 방식을 이해하고, 명령어 집합 구조, 파이프라인, 캐시 메모리 등 성능 향상 기술을 배웁니다. 컴퓨터가 데이터를 처리하는 과정을 하드웨어 수준에서 이해함으로써 효율적인 소프트웨어 개발 능력을 기르고, 시스템 프로그래밍과 임베디드 시스템 개발의 기초를 다집니다. 이 과목은 소프트웨어와 하드웨어의 경계를 이해하는 필수 과목입니다.

학습 내용:
이 과목은 컴퓨터 하드웨어의 구조와 동작 원리를 체계적으로 학습합니다. 수업은 컴퓨터의 기본 구성과 디지털 논리회로의 원리를 이해하는 것으로 시작하여, 2진수 체계와 데이터 표현 방법(정수, 실수, 문자 표현)을 배웁니다. CPU의 구조와 명령어 실행 과정을 학습하며, 명령어 집합 구조(ISA)와 어셈블리 언어의 기초를 익힙니다. 중앙처리장치의 제어 장치와 연산 장치의 역할을 이해하고, 명령어 파이프라인을 통한 성능 향상 기법을 배웁니다. 메모리 계층 구조(레지스터, 캐시, 주기억장치, 보조기억장치)를 학습하여 메모리 시스템의 동작 원리와 캐시 메모리의 필요성을 이해합니다. 가상 메모리의 개념과 페이징, 세그멘테이션 기법을 배우며, 입출력 시스템과 인터럽트 처리 메커니즘을 학습합니다. 병렬 처리와 멀티코어 프로세서의 구조를 다루며, 성능 평가 지표(CPI, MIPS, 벤치마크)를 학습하여 컴퓨터 시스템의 성능을 분석하는 능력을 기릅니다.

기술 키워드: 컴퓨터구조, CPU, 메모리, 캐시, 파이프라인, 명령어집합, ISA, 어셈블리, 레지스터, 가상메모리, 페이징, 입출력, 인터럽트, 멀티코어, 디지털논리, 2진수

관심사 키워드: 컴퓨터구조, 하드웨어, 시스템프로그래밍, 저수준프로그래밍, 2학년필수, 전공핵심, 임베디드


===CATEGORY: 전공과목
===TITLE: 프로그래밍프로젝트
과목코드: CS0616
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 2-3학년
개설 학기: 2학기

과목 소개:
프로그래밍프로젝트는 실제 소프트웨어 개발 프로세스를 경험하는 실습 중심의 프로젝트 과목입니다. 학생들은 팀을 구성하여 문제 정의, 설계, 구현, 테스트, 발표까지 전체 개발 과정을 수행하며, 협업과 의사소통 능력을 기릅니다. 배운 프로그래밍 지식과 기술을 실제 프로젝트에 적용하여 문제 해결 능력을 강화하고, 포트폴리오로 활용할 수 있는 완성도 높은 결과물을 제작합니다. 이 과목을 통해 학생들은 실무 개발 경험을 쌓고, 취업과 창업에 필요한 실전 역량을 배양합니다.

학습 내용:
이 과목은 팀 프로젝트를 통해 소프트웨어 개발의 전 과정을 경험합니다. 수업은 프로젝트 주제 선정과 팀 구성으로 시작하여, 프로젝트 계획서를 작성하고 일정을 관리하는 방법을 배웁니다. 요구사항 분석 단계에서는 사용자의 요구를 파악하고 이를 구체적인 기능 명세로 작성하는 방법을 익히며, 시스템 설계 단계에서는 UML 다이어그램을 활용하여 전체 시스템의 구조를 설계합니다. 구현 단계에서는 Git과 GitHub를 활용한 버전 관리와 협업 방법을 실습하며, 코드 리뷰를 통해 코드 품질을 향상시키는 방법을 배웁니다. 각 팀원의 역할을 분담하고 정기적인 팀 미팅을 통해 진행 상황을 공유하며, 문제 발생 시 해결 방법을 함께 모색합니다. 테스트 단계에서는 단위 테스트와 통합 테스트를 수행하여 버그를 발견하고 수정하며, 사용자 테스트를 통해 실제 사용성을 검증합니다. 중간 발표와 최종 발표를 통해 프로젝트 진행 상황과 결과를 효과적으로 전달하는 프레젠테이션 능력을 기르며, 프로젝트 보고서를 작성하여 전체 개발 과정을 문서화하는 능력을 습득합니다.

기술 키워드: 프로젝트, 팀프로젝트, Git, GitHub, 버전관리, 협업, 요구사항분석, 시스템설계, UML, 코드리뷰, 테스트, 프레젠테이션

관심사 키워드: 프로젝트, 팀협업, 실무경험, 포트폴리오, 소프트웨어개발, 협업개발, 실습프로젝트, 실전개발


===CATEGORY: 전공과목
===TITLE: 인공지능
과목코드: CS0660
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 3학년
개설 학기: 1학기

과목 소개:
인공지능은 지능적인 시스템을 설계하고 구현하는 방법을 학습하는 전공 선택 과목입니다. 학생들은 인공지능의 기본 개념과 역사, 주요 응용 분야를 이해하고, 탐색 알고리즘, 지식 표현, 추론, 기계학습 등 인공지능의 핵심 기술을 배웁니다. 실제 인공지능 문제를 해결하기 위한 다양한 접근 방법과 알고리즘을 학습하며, 파이썬과 관련 라이브러리를 활용하여 인공지능 시스템을 직접 구현하는 실습을 수행합니다. 이 과목은 머신러닝, 딥러닝, 자연어 처리 등 고급 인공지능 과목의 기초가 되는 핵심 과목입니다.

학습 내용:
이 과목은 인공지능의 기본 원리부터 다양한 기법까지 체계적으로 학습합니다. 수업은 인공지능의 정의와 역사, 튜링 테스트, 인공지능의 분류(약한 AI vs 강한 AI)를 이해하는 것으로 시작하여, 문제 해결과 탐색 기법(깊이 우선 탐색, 너비 우선 탐색, A* 알고리즘, 휴리스틱 탐색)을 학습합니다. 게임 이론과 적대적 탐색(Minimax, Alpha-Beta Pruning)을 다루며, 제약 만족 문제(CSP)의 해결 방법을 익힙니다. 지식 표현 단원에서는 명제 논리와 1차 술어 논리, 의미망, 프레임, 온톨로지 등 지식을 표현하는 다양한 방법을 배우고, 추론 기법(전향 연쇄 추론, 후향 연쇄 추론)을 학습합니다. 불확실성 추론에서는 베이지안 네트워크와 확률적 추론 방법을 이해하고, 기계학습의 기초(지도학습, 비지도학습, 강화학습)를 배웁니다. 자연어 처리의 기본 개념과 형태소 분석, 구문 분석 방법을 다루며, 컴퓨터 비전의 기초와 이미지 처리 기법을 학습합니다. 마지막으로 전문가 시스템과 최신 인공지능 기술 동향을 살펴보며 인공지능의 응용 가능성을 탐구합니다.

기술 키워드: 인공지능, AI, 탐색알고리즘, A*, 휴리스틱, 지식표현, 추론, 베이지안네트워크, 기계학습, 지도학습, 비지도학습, 강화학습, 자연어처리, 컴퓨터비전, 전문가시스템

관심사 키워드: 인공지능, AI기초, 지능시스템, 기계학습입문, 인공지능응용, 미래기술, AI개발


===CATEGORY: 전공과목
===TITLE: 캡스톤디자인
과목코드: CS0858, CS0859
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 4학년
개설 학기: 1학기, 2학기

과목 소개:
캡스톤디자인은 4년간 배운 전공 지식을 종합하여 실제 산업 현장의 문제를 해결하는 졸업 프로젝트 과목입니다. 학생들은 팀을 구성하여 실제 기업이나 사회가 직면한 문제를 선정하고, 이를 해결하기 위한 창의적이고 실용적인 솔루션을 기획, 설계, 구현, 평가하는 전 과정을 수행합니다. 지도교수의 멘토링과 산업체 전문가의 자문을 받으며 프로젝트를 진행하고, 중간 발표와 최종 발표를 통해 결과물을 평가받습니다. 완성도 높은 프로젝트는 학술대회 출품, 특허 출원, 창업으로 연결될 수 있으며, 취업 포트폴리오로 활용할 수 있습니다.

학습 내용:
이 과목은 전공 지식을 실제 문제 해결에 적용하는 종합 프로젝트를 수행합니다. 수업은 프로젝트 주제 선정으로 시작하여, 선행 연구 조사와 시장 분석을 통해 프로젝트의 타당성을 검토합니다. 요구사항 분석과 시스템 설계 단계에서는 사용자 요구를 구체적으로 파악하고, 이를 만족하는 시스템 아키텍처를 설계합니다. 프로젝트 관리 기법을 활용하여 일정, 예산, 위험 요소를 관리하며, 애자일 방법론을 적용하여 반복적인 개발 과정을 진행합니다. 구현 단계에서는 최신 개발 도구와 프레임워크를 활용하여 실제 동작하는 시스템을 제작하고, 단위 테스트와 통합 테스트를 통해 품질을 검증합니다. 중간 발표에서는 프로젝트 진행 상황과 중간 결과물을 발표하고, 피드백을 받아 개선 방향을 설정합니다. 사용자 테스트를 통해 실제 사용성을 평가하고, 최종 발표에서는 완성된 시스템의 기능과 성능, 기대 효과를 종합적으로 발표합니다. 프로젝트 보고서와 기술 문서를 작성하여 전체 개발 과정과 결과를 체계적으로 정리하며, 지적 재산권 출원 가능성을 검토합니다.

기술 키워드: 캡스톤디자인, 졸업프로젝트, 프로젝트관리, 시스템설계, 애자일, 프로토타입, 사용자테스트, 프레젠테이션, 기술문서, 특허

관심사 키워드: 졸업프로젝트, 캡스톤, 실무프로젝트, 포트폴리오, 창업, 산학협력, 종합설계, 4학년, 취업준비


===CATEGORY: 전공과목
===TITLE: 운영체제
과목코드: CS0617
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 3학년
개설 학기: 1학기

과목 소개:
이 과목은 운영체제의 기본 개념과 원리를 이해하고, 컴퓨터 시스템의 핵심 구성 요소인 운영체제가 하드웨어와 소프트웨어를 효율적으로 관리하는 방법을 학습하는 것을 주 목표로 합니다. 학생들은 프로세스 관리, 메모리 관리, 파일 시스템, 입출력 시스템 등 운영체제의 주요 기능을 배우며, 다양한 운영체제의 구조와 특징을 비교 분석합니다. 실습을 통해 운영체제의 내부 동작 원리를 직접 확인하고, 시스템 프로그래밍의 기초를 다집니다. 이 과목은 시스템 소프트웨어 개발과 서버 관리의 필수 기초 과목입니다.

학습 내용:
이 과목은 운영체제의 기본 개념과 구조를 이해하고, 컴퓨터 시스템 자원의 효율적인 관리 원리를 학습하는 것을 목표로 합니다. 수업은 운영체제의 개요와 역할, 컴퓨터의 발전 과정, 운영체제의 구성과 종류를 살펴보는 것으로 시작합니다. 이후 컴퓨터 구조와 성능 향상 기술을 학습하며, 프로세스의 개념과 상태, 프로세스 제어 블록(PCB), 프로세스 계층 구조를 통해 프로그램 실행 단위를 이해합니다. 스레드와 프로세스 간 통신을 학습하여 병렬 처리와 동시성 제어의 원리를 배우고, CPU 스케줄링 알고리즘을 통해 자원 배분과 성능 최적화 방법을 익힙니다. 임계구역 문제와 동기화 단원에서는 프로세스 간 협력과 충돌 방지를 위한 동기화 기법을 사례 중심으로 학습합니다. 교착상태 단원에서는 시스템 자원 경쟁으로 인한 정지 상황을 이해하고 이를 예방·회피하는 전략을 배웁니다. 메모리 관리 단원에서는 메모리의 구조와 할당, 페이징, 가상 메모리 관리 기법을 학습하여 효율적인 메모리 활용 방안을 익히며, 파일 시스템과 저장장치, 입출력 시스템의 작동 원리를 이해합니다. 마지막으로 가상화와 보안 단원에서는 현대 운영체제의 핵심 기술과 시스템 보호 기법을 학습하여 전체 운영체제의 구조적 이해를 완성합니다.

기술 키워드: 운영체제, OS, 프로세스, 스레드, CPU스케줄링, 동기화, 교착상태, 메모리관리, 페이징, 가상메모리, 파일시스템, 입출력, PCB, 임계구역, 세마포어, 뮤텍스

관심사 키워드: 운영체제, 시스템프로그래밍, 프로세스관리, 메모리관리, 3학년필수, 전공핵심, 시스템소프트웨어


===CATEGORY: 전공과목
===TITLE: 머신러닝
과목코드: CS0864
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 3학년
개설 학기: 2학기

과목 소개:
이 과목은 머신러닝의 기본 개념과 핵심 알고리즘을 이해하고, 이를 다양한 분야에 응용할 수 있는 실전적 능력을 기르는 것을 목표로 합니다. 수업은 머신러닝의 정의, 역사, 알고리즘의 종류를 학습하여 해당 분야의 전반적인 구조를 이해하는 것에서 시작합니다. 이어서 선형 회귀, 로지스틱 회귀, 퍼셉트론 등 기초적인 머신러닝 알고리즘과 이를 구현하기 위한 파이썬 기반 이론 및 실습을 학습합니다. 학생들은 다양한 데이터와 문제 상황에 적합한 알고리즘을 분석하고 선택하는 방법을 익히며, 이를 실제 사례에 적용함으로써 모델 설계 및 평가 능력을 함양합니다. 전체 과정을 통해 머신러닝의 원리를 체계적으로 이해하고, 이를 활용해 실제 문제를 해결할 수 있는 응용 역량을 강화합니다.

학습 내용:
이 과목은 머신러닝의 기본 개념부터 딥러닝의 핵심 구조까지 단계적으로 학습하여, 데이터 기반 문제 해결 능력을 기르는 것을 목표로 합니다. 수업은 머신러닝의 정의와 개념을 이해하는 것으로 시작하여, 머신러닝 구현에 필수적인 기초 라이브러리의 사용법을 익힙니다. 이후 선형 회귀와 로지스틱 회귀를 통해 지도학습의 기본 원리를 배우고, 퍼셉트론과 역전파 알고리즘을 학습하여 인공신경망의 작동 원리를 이해합니다. 딥러닝 기초 단원에서는 신경망 구조와 학습 메커니즘을 학습하며, 이후 딥러닝 최적화 기법을 통해 모델 성능을 향상시키는 방법을 실습합니다. 지도학습과 비지도학습 단원에서는 데이터의 특성에 따른 학습 접근 방식을 비교하고, 군집화와 밀도추정 기법을 통해 데이터 구조를 분석하는 방법을 익힙니다. 또한 선형인자모형과 오토인코더를 통해 차원 축소와 비선형 표현 학습을 이해하고, 준지도학습을 통해 데이터가 제한된 환경에서의 모델 학습 기법을 탐구합니다. 마지막으로 순환신경망(RNN)을 학습하여 시계열 데이터나 자연어 처리 등 순차적 데이터의 패턴을 분석하고 예측하는 능력을 기릅니다.

기술 키워드: 머신러닝, 선형회귀, 로지스틱회귀, 퍼셉트론, 역전파, 신경망, 딥러닝, 지도학습, 비지도학습, 준지도학습, 군집화, 오토인코더, RNN, 순환신경망, 최적화, Python

관심사 키워드: 머신러닝, 인공지능, 데이터분석, 딥러닝기초, 모델설계, AI개발, 데이터과학


===CATEGORY: 전공과목
===TITLE: 프로그래밍언어론
과목코드: CS0618
학점: 3학점
이수구분: 전공필수
평균 수강 학년: 3학년
개설 학기: 2학기

과목 소개:
이 과목은 프로그래밍 언어의 개념과 역사, 그리고 다양한 언어 구조를 이해하는 것을 목표로 합니다. 수업은 인간과 컴퓨터 간의 의사 전달 도구로서의 프로그래밍 언어가 어떻게 발전해 왔는지를 살펴보며, 언어의 구문 구조, 변수, 데이터 타입 등의 기본 개념을 학습합니다. 또한 객체지향 프로그래밍의 원리를 통해 프로그램을 구조적으로 설계하고 재사용 가능한 코드를 작성하는 방법을 익힙니다. 이를 통해 학생들은 새로운 프로그래밍 언어의 설계 개념과 이를 실행하는 컴퓨터 시스템의 동작 원리를 이해하고, 다양한 프로그래밍 패러다임을 실제 개발에 적용할 수 있는 기초 역량을 기릅니다.

학습 내용:
이 과목은 프로그래밍 언어의 개념과 다양한 패러다임을 이해하고, 언어의 구조적 원리를 학습하는 것을 목표로 합니다. 수업은 프로그래밍 언어의 정의와 역할을 이해하는 것으로 시작하여, 언어의 발전 역사와 주요 특징을 탐구합니다. 이후 구문, 변수, 데이터 타입의 개념을 학습하며 프로그램의 기본 구성 요소와 표현 방식을 익힙니다. 식과 제어문 단원에서는 프로그램의 흐름 제어 구조를 학습하고, 부프로그램 단원에서는 함수와 절차 호출을 통한 모듈화 개념을 배웁니다. 예외 처리 단원에서는 오류를 효과적으로 관리하는 방법을 익히며, 객체지향 프로그래밍 단원에서는 클래스, 객체, 상속, 다형성 개념을 학습하여 구조적 설계 능력을 기릅니다. 함수형 프로그래밍과 논리 프로그래밍 단원에서는 선언적 프로그래밍 패러다임을 이해하고, 문제 해결을 위한 다양한 접근 방식을 탐구합니다. 마지막으로 프로그래밍 언어 발표를 통해 각 언어의 특징과 장단점을 비교 분석하며, 프로그래밍 언어 전반에 대한 통합적 이해를 완성합니다.

기술 키워드: 프로그래밍언어, 구문, 변수, 데이터타입, 제어문, 함수, 객체지향, 클래스, 상속, 다형성, 함수형프로그래밍, 논리프로그래밍, 예외처리, 언어설계

관심사 키워드: 프로그래밍언어, 언어이론, 객체지향, 함수형, 프로그래밍패러다임, 3학년필수, 언어설계


===CATEGORY: 전공과목
===TITLE: 소프트웨어공학
과목코드: CS0663
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 4학년
개설 학기: 2학기

과목 소개:
소프트웨어공학의 역사와 개념에 대해 살펴보고, 고품질, 높은 생산성의 소프트웨어를 개발하기 위한 분석, 설계, 구현 방법론들에 대해 학습합니다. 특히, 객체지향개발 방법론의 표준인 UML(Unified Modeling Language)의 사용법을 습득하여 시스템 개발에 직접 응용할 수 있는 능력을 기르도록 합니다. 학생들은 소프트웨어 개발 생명주기 전반을 이해하고, 요구사항 분석부터 설계, 구현, 테스트, 유지보수까지의 체계적인 개발 프로세스를 학습합니다. 실무에서 사용되는 다양한 분석 및 설계 기법과 CASE 도구를 익히며, 소프트웨어 품질 관리와 프로젝트 관리 능력을 배양합니다.

학습 내용:
이 과목은 소프트웨어 공학의 개념과 원리를 이해하고, 체계적인 소프트웨어 개발 과정과 설계 기법을 학습하는 것을 목표로 합니다. 수업은 소프트웨어 공학의 정의와 역사, 좋은 소프트웨어의 특성, 그리고 소프트웨어 위기의 개념을 통해 소프트웨어 개발의 중요성을 인식하는 것으로 시작합니다. 이후 소프트웨어 라이프사이클을 중심으로 요구분석, 설계, 코딩, 테스트, 운용, 보수의 전 과정을 학습하며, 요구분석의 중요성과 다양한 분석 방법론 및 도구를 익힙니다. HIPO 다이어그램, 데이터 플로우 다이어그램, 구조화 차트, 워리어-오어 다이어그램, 나시-슈나이더만 차트 등 다양한 분석 및 설계 표현 기법을 실습하고, 설계 개념에서는 모듈화, 추상화, 정보은폐, 추상 데이터형, 객체지향 개념을 학습합니다. 또한 톱다운과 보텀업 설계 기법, 모듈러 설계의 장단점을 비교하고, 구조화 설계, 데이터 구조 지향 설계, 데이터 플로우 지향 설계, 객체지향 설계 등의 설계 패러다임을 익힙니다. 코딩 및 테스트 단원에서는 효율적인 코딩 기술과 테스트 케이스 설계 방법을 배우며, 프로그램 품질 관리, 워크플로우, 인스펙션 기법을 통해 품질 향상 방안을 학습합니다. 운용과 보수 단계에서는 프로젝트 관리, 소프트웨어 재사용 기술, CASE 도구의 활용법을 배우고, UML의 개념과 필요성을 이해합니다. 마지막으로 Rational Unified Process(RUP), 폭포수 공정, 반복 공정의 차이를 학습하고, 클래스, 시퀀스, 객체, 패키지, 배치, 상태 기계, 액티비티, 커뮤니케이션, 컴포넌트, 타이밍 등 다양한 UML 다이어그램을 설계함으로써 실제 소프트웨어 개발 과정에 필요한 분석 및 설계 역량을 종합적으로 기릅니다.

기술 키워드: 소프트웨어공학, UML, 요구분석, 소프트웨어설계, 객체지향설계, DFD, 데이터플로우다이어그램, 모듈화, 테스트케이스, CASE도구, 소프트웨어라이프사이클, RUP, 품질관리, 프로젝트관리

관심사 키워드: 소프트웨어공학, 소프트웨어설계, 시스템분석, 개발방법론, 프로젝트관리, 4학년, 소프트웨어개발프로세스


===CATEGORY: 전공과목
===TITLE: 블록체인
과목코드: CS0865
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 3-4학년
개설 학기: 2학기

과목 소개:
이 과목은 블록체인의 이론적 기초와 구조를 이해하고, 이를 기반으로 블록체인 애플리케이션을 설계·개발할 수 있는 실무 능력을 기르는 것을 목표로 합니다. 학생들은 블록체인의 이론적 배경과 기술적 동향을 학습하며, 블록체인의 특징과 발전 과정, 암호화폐 시스템을 구성하는 핵심 개념을 이해합니다. 또한 스마트 계약과 이더리움의 구조를 중심으로 블록체인 기술의 작동 원리를 학습하고, 이를 실제 응용에 연결합니다. 블록체인 애플리케이션 개발 단원에서는 이더리움의 블록 구조와 거래 구조를 분석하며, 코드 기반의 구체적인 개발 예시를 통해 블록체인 애플리케이션을 구현하는 방법을 익힙니다. 아울러 스마트 계약 개발을 실습하고, 블록체인 개발 환경을 직접 구축하며, 프로그래밍 언어 솔리디티(Solidity)를 활용해 블록체인 시스템을 설계·구현하는 실전적 역량을 강화합니다.

학습 내용:
이 과목은 블록체인과 암호화폐의 기본 개념부터 스마트 계약, 애플리케이션 개발, 가상화폐 구현까지 단계적으로 학습하여 블록체인 기술의 원리와 응용 능력을 함양하는 것을 목표로 합니다. 수업은 블록체인과 암호화폐의 개념 및 동작 원리를 이해하는 것으로 시작하며, 블록체인의 구조와 작동 방식, 합의 알고리즘 등 핵심 기술을 학습합니다. 스마트 계약과 이더리움 단원에서는 블록체인 2.0의 개념과 분산 애플리케이션 플랫폼의 역할을 이해하고, 스마트 계약이 실행되는 구조를 분석합니다. 이후 블록체인 서비스 활용을 통해 다양한 산업 분야에서의 응용 사례를 살펴보고, 애플리케이션 개발 기초를 다지며 솔리디티(Solidity)를 활용한 블록체인 애플리케이션 개발을 실습합니다. 프레임워크 단원에서는 개발 환경 구성과 구조 설계 방법을 배우고, 애플리케이션 설계 시 고려해야 할 보안 및 효율성 요소를 학습합니다. 또한 블록체인 기술의 한계와 기술적 과제를 분석하고, 이를 해결하기 위한 최신 접근법을 탐구합니다. 마지막으로 가상화폐 구현 과정을 단계별로 실습하여 실제 블록체인 시스템 개발 과정을 경험하고, 최종 보고서를 통해 학습한 내용을 종합적으로 정리합니다.

기술 키워드: 블록체인, 암호화폐, 스마트계약, 이더리움, Solidity, 솔리디티, 합의알고리즘, 분산원장, DApp, 가상화폐, 비트코인, 블록체인개발, Web3

관심사 키워드: 블록체인, 암호화폐, 스마트계약, 분산시스템, 핀테크, 블록체인개발, 미래기술, DApp개발


===CATEGORY: 전공과목
===TITLE: NovaSW취창업1, 2
과목코드: CS2005, CS2004
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 4학년
개설 학기: 1학기, 2학기

과목 소개:
이 과목은 4차 산업혁명 시대에 요구되는 기업가 정신과 실무 역량을 함양하고, 이를 기반으로 실제적인 취·창업 준비 능력을 기르는 것을 목표로 합니다. 학생들은 최신 기술 트렌드와 산업 동향을 분석하여 변화하는 비즈니스 환경을 이해하고, 이를 바탕으로 창의적인 아이디어를 도출해 실현 가능한 사업 계획을 수립하는 방법을 학습합니다. 또한 실무 중심의 포트폴리오 작성 능력을 배양하며, 팀 프로젝트를 통해 협업과 문제 해결 능력을 강화합니다. 수업 전반에서는 4차 산업혁명 시대의 핵심 기술과 산업 구조 변화를 분석하고, 혁신적인 사고를 기반으로 한 기업가 정신을 기릅니다. 이를 통해 학생들은 창의적 사고, 전략적 기획, 협업 능력을 종합적으로 개발하며, 성공적인 취업 및 창업을 위한 실질적인 역량을 갖추게 됩니다.

학습 내용:
이 과목은 4차 산업혁명 시대에 필요한 기업가 정신과 실무 역량을 강화하고, 최신 산업 동향을 기반으로 취업 및 창업을 준비하는 능력을 기르는 것을 목표로 합니다. 수업은 기업가 정신과 4차 산업혁명의 관계를 이해하는 오리엔테이션으로 시작하여, 『트렌드 코리아 2025』를 중심으로 최신 기술 트렌드와 산업 변화를 분석합니다. 이후 포트폴리오 작성 특강을 통해 자신의 강점과 역량을 효과적으로 표현하는 방법을 배우고, 실습을 통해 개별 포트폴리오를 완성합니다. 이어서 사업계획서 작성 특강에서는 창의적인 아이디어를 구체적인 사업 모델로 발전시키는 과정을 학습하며, 계획 수립과 문서화 능력을 향상시킵니다. 중간 이후에는 산업체 멘토 특강을 통해 실제 기업의 사례, 프로젝트 경험, 취·창업 관련 노하우를 직접 듣고 실무적 인사이트를 얻습니다. 마지막으로 학생들은 자신이 작성한 포트폴리오와 사업계획서를 발표하며, 실무 중심의 평가를 통해 창의적 사고력, 협업 능력, 문제 해결 역량을 종합적으로 강화합니다.

기술 키워드: 포트폴리오, 사업계획서, 기업가정신, 4차산업혁명, 트렌드분석, 비즈니스모델, 창업, 취업준비

관심사 키워드: 취업, 창업, 포트폴리오, 사업계획, 기업가정신, 진로설계, 4학년, 실무역량, 산업동향


===CATEGORY: 전공과목
===TITLE: 웹프로그래밍
과목코드: CS0858
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 3학년
개설 학기: 2학기

과목 소개:
컴퓨터는 하드웨어와 소프트웨어로 구분할 수 있고 소프트웨어는 시스템 소프트웨어와 응용 소프트웨어로 나눌 수 있습니다. 응용 소프트웨어 분야는 IT전공자들이 가장 범용으로 진출하는 분야입니다. 응용 소프트웨어에서 현재 가장 많이 사용되는 형태는 server-client를 웹으로 연동하는 형태입니다. 이 과목에서 학습하는 내용은 자바스크립트 기초문법, 함수, 객체, 내장객체, 예외처리, 클라이언트 자바스크립트 그리고 프로젝트로 진행됩니다. 이 과목의 학습 목표는 자바스크립트 사용방법을 이해하고 웹 프로그래밍을 스스로 작성할 수 있는 능력을 기르는 것입니다.

학습 내용:
이 과목은 웹 프로그래밍의 기초를 학습하고, HTML5, CSS3, JavaScript, jQuery 등을 활용하여 실제 웹 페이지를 설계하고 구현하는 능력을 기르는 것을 목표로 합니다. 수업은 웹의 개념을 이해하고 실습 환경을 구축하는 것으로 시작하여, 웹 페이지의 기본 구조와 작성 방법을 학습합니다. 이후 HTML5의 다양한 태그와 입력 양식, 구조화 태그를 익히며, CSS3 선택자와 단위, 속성을 활용해 웹 페이지의 디자인과 레이아웃을 구성하는 방법을 배웁니다. 반응형 웹 단원에서는 다양한 화면 크기에 대응하는 유연한 웹 디자인 기법을 실습하고, 자바스크립트의 기본 문법을 통해 동적인 웹 페이지 제작의 기초를 다집니다. 문서 객체 모델(DOM)과 jQuery 라이브러리를 학습하여 웹 요소를 조작하고 이벤트를 처리하는 방법을 익히며, 이를 응용하여 자바스크립트와 jQuery를 활용한 상호작용 기능을 구현합니다. 마지막으로 프로젝트 단원에서는 배운 기술을 종합적으로 활용해 홈페이지를 직접 설계하고 제작함으로써 실무 중심의 웹 개발 역량을 완성합니다.

기술 키워드: 웹프로그래밍, HTML5, CSS3, JavaScript, jQuery, DOM, 반응형웹, 웹디자인, 프론트엔드, 클라이언트, 웹개발

관심사 키워드: 웹개발, 웹프로그래밍, 프론트엔드, 웹디자인, 홈페이지제작, 반응형웹, 포트폴리오, 웹프로젝트


===CATEGORY: 전공과목
===TITLE: SW 전공영어
과목코드: IC0701
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 1학년
개설 학기: 1학기

과목 소개:
정보통신기술(ICT) 관련 교과목에서 자주 다루어지는 전공용어 및 관련 지식을 영어 원서를 통해 학습하여 글로벌 의사 소통 능력을 키우고, 전 세계의 모든 연구자들과 공동연구를 수행할 수 있는 역량을 갖춥니다. 학생들은 컴퓨터 과학의 핵심 개념과 용어를 영어로 학습하며, 전공 영어 독해 능력과 전문 용어 활용 능력을 배양합니다. 영어 원서를 읽고 이해하는 과정을 통해 국제적인 기술 문서와 논문을 읽을 수 있는 능력을 기르고, 글로벌 IT 환경에서 필요한 영어 커뮤니케이션 역량을 강화합니다.

학습 내용:
이 과목은 컴퓨터의 기본 개념부터 네트워크, 인터넷, 정보 시스템까지 컴퓨터 과학의 전반적인 구조와 응용을 이해하는 것을 목표로 합니다. 수업은 컴퓨터의 구성과 역할을 소개하며 시작하여, 시스템 유닛의 구조와 중앙처리장치(CPU), 메모리의 동작 원리를 학습합니다. 이후 저장장치, 입출력 장치 등 컴퓨터 하드웨어의 핵심 요소를 배우고, 운영체제와 유틸리티 프로그램을 포함한 시스템 소프트웨어의 기능과 역할을 이해합니다. 응용 소프트웨어 단원에서는 다양한 응용 프로그램의 종류와 활용 방법을 학습하며, 컴퓨터 네트워크 단원에서는 네트워크의 구성, 데이터 전송 방식, 프로토콜의 개념을 익힙니다. 인터넷과 월드 와이드 웹의 구조와 원리를 학습하고, 네트워크 및 인터넷 보안 단원에서는 개인정보 보호, 암호화, 보안 위협 대응 방법을 다룹니다. 멀티미디어와 웹, 전자상거래 단원에서는 디지털 콘텐츠의 활용과 온라인 비즈니스 모델을 탐구하며, 정보 시스템과 시스템 개발 단원에서는 조직 내 정보 처리 시스템의 설계 및 관리 개념을 배웁니다. 마지막으로 프로그램 개발과 프로그래밍 언어의 기초 개념을 학습하여, 컴퓨터 시스템과 소프트웨어가 상호작용하는 전체 과정을 종합적으로 이해합니다.

기술 키워드: 전공영어, ICT, 컴퓨터과학, 영어원서, CPU, 메모리, 네트워크, 프로토콜, 운영체제, 프로그래밍언어, 정보시스템, 영어전문용어

관심사 키워드: 전공영어, 영어독해, 글로벌커뮤니케이션, IT영어, 전문용어, 1학년, 영어학습


===CATEGORY: 전공과목
===TITLE: 딥러닝기초
과목코드: IC0683
학점: 3학점
이수구분: 전공선택
평균 수강 학년: 3학년
개설 학기: 2학기

과목 소개:
이 과목은 인공지능의 핵심 기술인 딥러닝의 개념과 응용 분야를 이해하고, 파이썬과 주요 딥러닝 라이브러리를 활용하여 실제 모델을 구현하는 능력을 기르는 것을 목표로 합니다. 수업은 딥러닝의 발전 과정과 기본 구조를 살펴보며, 복잡한 수학적 이론보다는 직관적 이해와 실습 중심의 학습에 초점을 맞춥니다. 학생들은 딥러닝의 주요 개념과 응용 분야를 학습하고, TensorFlow, Keras, PyTorch 등 오픈소스 라이브러리를 이용해 다양한 딥러닝 모델을 직접 구현합니다. 또한 학습 결과를 시각화하여 모델의 성능을 분석하고 개선하는 과정을 통해 실무 중심의 문제 해결 능력을 강화합니다. 전체 과정을 통해 이론과 실습을 균형 있게 익히며, 실제 인공지능 개발 환경에서 딥러닝 기술을 적용할 수 있는 실질적인 역량을 배웁니다.

학습 내용:
이 과목은 딥러닝의 기본 원리와 주요 알고리즘을 이해하고, 파이썬과 관련 라이브러리를 활용하여 다양한 인공지능 모델을 직접 구현하는 능력을 기르는 것을 목표로 합니다. 수업은 딥러닝의 개념과 의의를 이해하는 것으로 시작하여, NumPy, TensorFlow, PyTorch 등 주요 라이브러리의 설치 및 활용과 함께 기본적인 수학 개념을 학습합니다. 이후 선형 회귀와 경사하강법을 통해 학습의 기초를 다지고, 로지스틱 회귀, 퍼셉트론, 다층 퍼셉트론을 학습하여 신경망의 기본 구조와 작동 원리를 익힙니다. 오차역전파 알고리즘을 학습하여 모델의 학습 과정과 가중치 조정 원리를 이해하고, 딥러닝 모델 설계 및 데이터 전처리 과정을 실습합니다. 다중 분류 문제 해결, 과적합 방지, 최적화 기법 등을 학습하며 모델의 성능을 향상시키는 방법을 익힙니다. 후반부에는 CNN을 이용한 영상 인식, RNN을 활용한 자연어 처리, 그리고 GAN과 오토인코더를 통한 생성 모델 구현을 실습합니다. 마지막으로 전이학습을 활용한 모델 성능 개선과 생성형 인공지능의 최신 동향을 탐구하며, 전체 딥러닝 과정과 응용을 종합적으로 이해합니다.

기술 키워드: 딥러닝, TensorFlow, PyTorch, Keras, NumPy, CNN, RNN, GAN, 오토인코더, 경사하강법, 역전파, 퍼셉트론, 신경망, 전이학습, 영상인식, 자연어처리, 생성형AI

관심사 키워드: 딥러닝, 인공지능, AI개발, 신경망, 이미지인식, 자연어처리, 생성AI, 머신러닝심화